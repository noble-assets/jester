// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: query/v1/query.proto

package queryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVaasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVaasRequest) Reset() {
	*x = GetVaasRequest{}
	mi := &file_query_v1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaasRequest) ProtoMessage() {}

func (x *GetVaasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_v1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaasRequest.ProtoReflect.Descriptor instead.
func (*GetVaasRequest) Descriptor() ([]byte, []int) {
	return file_query_v1_query_proto_rawDescGZIP(), []int{0}
}

type Dollar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vaas          []string               `protobuf:"bytes,1,rep,name=vaas,proto3" json:"vaas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dollar) Reset() {
	*x = Dollar{}
	mi := &file_query_v1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dollar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dollar) ProtoMessage() {}

func (x *Dollar) ProtoReflect() protoreflect.Message {
	mi := &file_query_v1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dollar.ProtoReflect.Descriptor instead.
func (*Dollar) Descriptor() ([]byte, []int) {
	return file_query_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *Dollar) GetVaas() []string {
	if x != nil {
		return x.Vaas
	}
	return nil
}

type GetVaasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dollar        *Dollar                `protobuf:"bytes,1,opt,name=dollar,proto3" json:"dollar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVaasResponse) Reset() {
	*x = GetVaasResponse{}
	mi := &file_query_v1_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaasResponse) ProtoMessage() {}

func (x *GetVaasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_v1_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaasResponse.ProtoReflect.Descriptor instead.
func (*GetVaasResponse) Descriptor() ([]byte, []int) {
	return file_query_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetVaasResponse) GetDollar() *Dollar {
	if x != nil {
		return x.Dollar
	}
	return nil
}

var File_query_v1_query_proto protoreflect.FileDescriptor

var file_query_v1_query_proto_rawDesc = []byte{
	0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1c, 0x0a, 0x06, 0x44, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x61, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x76, 0x61, 0x61, 0x73,
	0x22, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x61, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x52, 0x06, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x32, 0x4e, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x56, 0x61, 0x61, 0x73, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x90, 0x01,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x62, 0x6c, 0x65, 0x2d, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x6a, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x51, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_query_v1_query_proto_rawDescOnce sync.Once
	file_query_v1_query_proto_rawDescData = file_query_v1_query_proto_rawDesc
)

func file_query_v1_query_proto_rawDescGZIP() []byte {
	file_query_v1_query_proto_rawDescOnce.Do(func() {
		file_query_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_query_v1_query_proto_rawDescData)
	})
	return file_query_v1_query_proto_rawDescData
}

var file_query_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_query_v1_query_proto_goTypes = []any{
	(*GetVaasRequest)(nil),  // 0: query.v1.GetVaasRequest
	(*Dollar)(nil),          // 1: query.v1.Dollar
	(*GetVaasResponse)(nil), // 2: query.v1.GetVaasResponse
}
var file_query_v1_query_proto_depIdxs = []int32{
	1, // 0: query.v1.GetVaasResponse.dollar:type_name -> query.v1.Dollar
	0, // 1: query.v1.QueryService.GetVaas:input_type -> query.v1.GetVaasRequest
	2, // 2: query.v1.QueryService.GetVaas:output_type -> query.v1.GetVaasResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_query_v1_query_proto_init() }
func file_query_v1_query_proto_init() {
	if File_query_v1_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_v1_query_proto_goTypes,
		DependencyIndexes: file_query_v1_query_proto_depIdxs,
		MessageInfos:      file_query_v1_query_proto_msgTypes,
	}.Build()
	File_query_v1_query_proto = out.File
	file_query_v1_query_proto_rawDesc = nil
	file_query_v1_query_proto_goTypes = nil
	file_query_v1_query_proto_depIdxs = nil
}
